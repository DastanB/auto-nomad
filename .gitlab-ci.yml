image: docker:latest


before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


stages:
  - build
  - push
  - deploy

variables:
  IMAGE_DJANGO: ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/django
  IMAGE_POSTGRES: ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/postgres

#prod-build:
#  stage: build
#  script:
#    - docker build -f compose/production/django/Dockerfile -t ${IMAGE_DJANGO}:${CI_COMMIT_SHA} .
#    - docker tag ${IMAGE_DJANGO}:${CI_COMMIT_SHA} ${IMAGE_DJANGO}:latest
#    - docker push ${IMAGE_DJANGO}:${CI_COMMIT_SHA}
#    - docker push ${IMAGE_DJANGO}:latest
#    - docker build -f compose/production/postgres/Dockerfile -t ${IMAGE_POSTGRES}:${CI_COMMIT_SHA} .
#    - docker push ${IMAGE_POSTGRES}:${CI_COMMIT_SHA}
#    - docker tag ${IMAGE_POSTGRES}:${CI_COMMIT_SHA} ${IMAGE_POSTGRES}:latest
#    - docker push ${IMAGE_POSTGRES}:latest
#  only:
#    - release

test-build:
  stage: build
  script:
    - docker build -f compose/test/django/Dockerfile -t ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/test_django:${CI_COMMIT_SHA} --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTPS_PROXY .
    - docker push ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/test_django:$CI_COMMIT_SHA
    - docker build -f compose/test/postgres/Dockerfile -t ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/test_postgres:${CI_COMMIT_SHA} --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTPS_PROXY .
    - docker push ${CI_REGISTRY}/${CI_REGISTRY_USER}/nomad_auto_advert/test_postgres:$CI_COMMIT_SHA
  only:
    - test

test-deploy:
  image: buffalobill571/alpine-ssh-pip-fabric:v0.1.0
  stage: deploy
  script:
    - fab test deploy
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  only:
    - test


#prod-deploy:
#  image: buffalobill571/alpine-ssh-pip-fabric:v0.1.0
#  stage: deploy
#  script:
#    - fab prod deploy
#  before_script:
#    - eval $(ssh-agent -s)
#    - mkdir -p ~/.ssh
#    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#  only:
#    - release
